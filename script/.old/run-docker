#!/bin/sh

# Locate our docker binary.
docker=$(which docker)

# Start writing out the command.
command="$docker run -it"

default_STOGRADE_IMAGE=stodevx/stograde:HEAD
default_STOGRADE_SHARE=$HOME/.stograde_share

if [ -z "${STOGRADE_IMAGE}" ];
then
    echo "===> \$STOGRADE_IMAGE is not set. Using $default_STOGRADE_IMAGE."
    STOGRADE_IMAGE=$default_STOGRADE_IMAGE
fi

if [ -z "$(docker images -q $STOGRADE_IMAGE 2>/dev/null)" ];
then
    echo "===> STOGRADE_IMAGE not installed in Docker... Trying to install."

    if docker pull $STOGRADE_IMAGE;
    then
        echo "      -> Installed successfully."
    else
        echo "      -> Installation failed. :("
        exit 1
    fi
else
    echo "===> STOGRADE_IMAGE is installed."
fi

if [ -z "${STOGRADE_SHARE}" ];
then
    echo "===> STOGRADE_SHARE is not set.  Defaulting to ${default_STOGRADE_SHARE}."
    STOGRADE_SHARE=$default_STOGRADE_SHARE
fi

if [ -d "$STOGRADE_SHARE" ];
then
    echo "===> STOGRADE_SHARE found."
else
    echo "===> STOGRADE_SHARE not found! Make sure it exists and is either a directory or a symlink to a directory."
    echo "      (\$STOGRADE_SHARE = \"$STOGRADE_SHARE\")"
    exit 1
fi

if [ -d "$STOGRADE_SHARE/data" ];
then
    echo "      -> \$STOGRADE_SHARE/data found."
else
    echo "===> $STOGRADE_SHARE/data does not exist or is not a directory."
    exit 1
fi

if [ -d "$STOGRADE_SHARE/students" ];
then
    echo "      -> \$STOGRADE_SHARE/students found."
else
    echo "===> $STOGRADE_SHARE/students does not exist or is not a directory."
    exit 1
fi

if [ -d "$STOGRADE_SHARE/logs" ];
then
    echo "      -> \$STOGRADE_SHARE/logs found."
else
    echo "===> $STOGRADE_SHARE/logs does not exist or is not a directory."
    exit 1
fi

if [ -f "$STOGRADE_SHARE/students.txt" ];
then
    echo "      -> \$STOGRADE_SHARE/students.txt found."
else
    echo "===> $STOGRADE_SHARE/students.txt does not exist or is not a regular file."
    exit 1
fi

if [ -f "$HOME/.ssh/id_rsa" ];
then
    echo "===> /root/.ssh/id_rsa ~> ~/.ssh/id_rsa"
else
    echo "===> No SSH key on your user account.  Make sure you have ssh set up."
    exit 1
fi

if [ -f "$HOME/.ssh/id_rsa.pub" ];
then
    echo "===> /root/.ssh/id_rsa.pub ~> ~/.ssh/id_rsa.pub"
else
    echo "===> No SSH key on your user account.  Make sure you have ssh set up."
    exit 1
fi


command="$command -v $(readlink -f $STOGRADE_SHARE):/stograde_share/"
command="$command -v $(readlink -f $HOME/.ssh/):/stograde_share/.ssh/"

command="$command $STOGRADE_IMAGE $@"

if [[ "$@" == "" ]];
then
    echo "fail: must provide at least one argument (this is the shell command, try 'stograde --help')"
fi

echo "Running $command..."

$command
